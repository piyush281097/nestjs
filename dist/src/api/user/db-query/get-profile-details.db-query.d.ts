export declare const getProfileDetailsDbQuery = "\nWITH following_details AS (\n    SELECT\n        1 as temp,\n        count(*) AS following_count\n    FROM\n        followers f\n    WHERE\n        user_id = $1\n        AND is_deleted IS NOT TRUE\n    GROUP BY\n        f.user_id\n),\nis_being_followed AS (\n    SELECT\n        1 as temp,\n        count(*) AS followers_count\n    FROM\n        followers f2\n    WHERE\n        follower_id = $1\n        AND is_deleted IS NOT TRUE\n    GROUP BY\n        f2.follower_id\n)\nSELECT uc.id                                            AS user_id,\n       uc.email,\n       uc.is_verified,\n       COALESCE(uc.is_signup_complete, false)           as is_signup_complete,\n       coalesce(fds.following_count,0)::integer                            as following_count,\n       coalesce(ibf.followers_count,0)::integer                            as followers_count,\n       case when f1.id = $2 is not null then true else false end           as is_following,\n       case when f2.id = $2 is not null then true else false end           as is_being_followed,\n       uc.is_active,\n       uc.user_handle,\n       uc.country_code,\n       uc.mobile_number,\n       up.first_name,\n       up.last_name,\n       up.quote,\n       up.about,\n       up.goal,\n       mel.type                                         as experience_level,\n       json_build_object('image_org', pm.image_org,\n                         'image_thumb', pm.image_thumb,\n                         'image_small', pm.image_small,\n                         'image_medium', pm.image_medium,\n                         'image_large', pm.image_large) AS profile_image,\n       json_agg(\n       DISTINCT jsonb_build_object(\n               'investor_name', it.investor_name,\n               'from', it.\"from\",\n               'to', it.\"to\",\n               'activity', it.activity\n           )\n           ) FILTER (WHERE it.id IS NOT NULL)           as timeline,\n\n       json_agg(\n       DISTINCT jsonb_build_object(\n               'id', mit.id,\n               'type', mit.type\n           )\n           ) FILTER (WHERE mit.id IS NOT NULL)          as investment_style,\n\n       json_agg(\n       DISTINCT jsonb_build_object(\n               'id', mi.id,\n               'type', mi.type\n           )\n           ) FILTER (WHERE mi.id IS NOT NULL)           as interest\nFROM user_core uc\n         LEFT JOIN user_profile up ON up.user_id = uc.id\n         LEFT JOIN profile_media pm ON pm.user_id = uc.id\n         LEFT JOIN user_experience ue on uc.id = ue.user_id\n         LEFT JOIN master_experience_level mel on ue.experience_id = mel.id\n         LEFT JOIN investment_timeline it on uc.id = it.user_id\n         LEFT JOIN user_investment_types uit on uc.id = uit.user_id\n         LEFT JOIN master_investment_types mit on uit.investment_id = mit.id\n         LEFT JOIN user_interests ui ON uc.id = ui.user_id\n         LEFT JOIN master_interests mi on ui.interests_id = mi.id\n         LEFT JOIN following_details fds ON fds.temp = 1\n         LEFT JOIN is_being_followed ibf ON ibf.temp = 1\n         LEFT JOIN followers f1 on f1.is_deleted IS NOT TRUE AND f1.follower_id = uc.id and f1.user_id = $2\n         LEFT JOIN followers f2 on f2.is_deleted IS NOT TRUE AND f2.follower_id = $2  and f2.follower_id = uc.id\n\nWHERE uc.id = $1 AND uc.is_deleted IS NOT TRUE\nGROUP BY uc.id,\n        f1.id, f2.id,\n        fds.following_count,\n        ibf.followers_count,\n         up.first_name,\n         up.last_name,\n         up.quote,\n         up.about,\n         up.goal,\n         mel.type,\n         pm.image_org,\n         pm.image_large,\n         pm.image_thumb,\n         pm.image_small,\n         pm.image_medium,\n         pm.image_large;\n";
